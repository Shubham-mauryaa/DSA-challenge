link - https://leetcode.com/problems/merge-k-sorted-lists/description/
code - 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergelist(ListNode* l1, ListNode* l2){
        if(!l1)return l2;
        if(!l2)return l1;

        ListNode* ans = new ListNode(0);
        ListNode* dummy = ans;

        while(l1 && l2){
            if(l1->val <= l2->val){
                dummy->next = l1;
                dummy = dummy->next;
                l1 = l1->next;
            }
            else{
                dummy->next = l2;
                dummy = dummy->next;
                l2 = l2->next;
            }
        }
        if(l1)dummy->next = l1;
        if(l2)dummy->next = l2;

        return ans->next;
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.size() == 0)return NULL;
        ListNode* ans = lists[0];

        for(int i=1; i<lists.size(); i++){
            ans = mergelist(ans, lists[i]);
        }

        return ans;
    }
};
