link-https://leetcode.com/problems/4sum/description/
code-
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        vector<vector<int>>ans;
        sort(nums.begin(), nums.end());

        for(int i=0 ; i < n; i++){
            if(i>0 && nums[i]==nums[i-1])continue;

            for(int j = i+1; j<n; j++){
                if(j>i+1 && nums[j]==nums[j-1])continue;

                int s=j+1, e=n-1;
                while(s < e){
                    long long sum = nums[i];
                    sum += nums[j]; 
                    sum += nums[s]; 
                    sum += nums[e];
                    if(target == sum){
                        ans.push_back({nums[i], nums[j], nums[s], nums[e]});
                        s++, e--;

                        while(s<e && nums[s]==nums[s-1])s++;
                        while(s<e && nums[e]==nums[e+1])e--;
                    }
                    else if(target > sum)s++;
                    else e--;
                }
            }
        }

        return ans;
    }
};
