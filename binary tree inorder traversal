link - https://leetcode.com/problems/binary-tree-inorder-traversal/description/
code- 
class Solution {
public:
    void inorder(TreeNode* root, vector<int>& ans){
        if(!root)return;

        inorder(root->left, ans);
        ans.push_back(root->val);
        inorder(root->right, ans);
    }
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        inorder(root, ans);
        return ans;
    }
};

code2-
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode*> st;

        while(true){
            if(root != NULL){
                st.push(root);
                root = root->left;
            }
            else{
                if(st.empty())break;
                root = st.top();
                st.pop();
                ans.push_back(root->val);

                root = root->right;
            }
        }

        return ans;
    }
};
