link - https://leetcode.com/problems/symmetric-tree/description/
Solution - 
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool helper(TreeNode* rl, TreeNode* rr){
        if(rr==NULL && rl==NULL)return true;
        if( (rr==NULL && rl!=NULL) || (rr!=NULL && rl==NULL) || (rl->val != rr->val) ) return false;
        
        return helper(rl->left , rr->right) && helper(rl->right, rr->left);
    }
    bool isSymmetric(TreeNode* root) {
        if(root==NULL || (root->left==NULL && root->right==NULL))return true;
        if(root->left==NULL || root->right==NULL)return false;

        return helper(root->left , root->right);
    }
};
