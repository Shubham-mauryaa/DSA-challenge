link - https://leetcode.com/problems/first-missing-positive/description/
https://www.geeksforgeeks.org/problems/smallest-positive-missing-number-1587115621/1

code - 
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int n = nums.size();
        for(int i=0 ;i<n; i++){
            if(nums[i] < 0)nums[i] = 0;
        }

        for(int i=0; i<n; i++){
            int indx = abs(nums[i]);

            if(indx>=1 && indx<=n){
                if(nums[indx-1] > 0)nums[indx-1] *= -1;
                else if(nums[indx-1] == 0) nums[indx-1] = -1*(n+1);
            }
        }

        for(int i=1; i<n+1; i++){
            if(nums[i-1] >= 0)return i;
        }
        return n+1;
    }
};

code - 

class Solution
{
    public:
    //Function to find the smallest positive number missing from the array.
    int missingNumber(int arr[], int n) 
    { 
        // Your code here
        int res =1;
        sort(arr, arr+n);
        
        for(int i=0; i<n; i++){
            if(arr[i] == res){
                res++;
            }
        
        }
        return res;
    } 
};
