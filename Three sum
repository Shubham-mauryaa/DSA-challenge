link - https://leetcode.com/problems/3sum/description/
code- 
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        vector<vector<int>>ans;

        for(int i=0; i<n; i++){
            if(i>0 && nums[i]==nums[i-1])continue;
            int target = -1*nums[i];

            int low = i+1, high = n-1;
            
            while(low < high){
                int sum = nums[low]+nums[high];
                if(sum == target){
                    ans.push_back({-1*target, nums[low], nums[high]});
                    low++, high--;

                    while(low < high && nums[low] == nums[low-1])low++;
                    while(low<high && nums[high] == nums[high+1])high--;
                }
                else if(sum > target)high--;
                else low++;    
            }
        }

        return ans;
    }
};
