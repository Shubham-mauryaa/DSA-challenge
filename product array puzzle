link - https://www.geeksforgeeks.org/problems/product-array-puzzle4525/1
solutions - 
class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        vector<long long int> ans(n, 0);
        long long int prod = 1 ;
        int cnt = 0;
        
        for(int i=0; i<n; i++){
            prod *= nums[i];
            if(nums[i] == 0)cnt++;
        }
        
        if(prod != 0){
            for(int i=0; i<n; i++){
                ans[i] = prod/nums[i];
            }
        }
        else if(cnt > 1)return ans;
        else{
            int indx;
            prod = 1;
            for(int i=0; i<n; i++){
                if(nums[i] != 0)prod *= nums[i];
                else indx = i;
            }
            ans[indx] = prod;
        }
        
        
        return ans;
    }
};

solution 2 - 
//User function template for C++

class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        vector<long long int> ans;
        
        for(int i=0; i<n; i++){
            long long int prod = 1 ;
            for(int j=0; j<n; j++){
                if(i == j)continue;
                
                prod *= nums[j]; 
            }
            ans.push_back(prod);
        }
        
        return ans;
    }
};
